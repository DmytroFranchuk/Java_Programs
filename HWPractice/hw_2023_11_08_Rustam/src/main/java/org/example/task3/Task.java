package org.example.task3;

import java.util.concurrent.Callable;

public class Task implements Callable<String> {
    private String name;
    private int time;

    public Task(String name, int time) {
        this.name = name;
        this.time = time;
    }

    @Override
    public String call() throws Exception {
        Thread.sleep(time);
        return "Задача: " + name + " - выполнена."; // Время выполнения задачи " + time + " миллисекунд";
    }
}
//Представим, что у нас есть различные задачи (например почистить зубы, помыть посуду), используя тред экзекьютеры
//cоздайте выполнитель задач - мы хотим хранить информацию о том задача выполнена или нет. Одновременно мы можем
//выполнять только 1 задачу, но у нас есть 10 задач (помыть посуду, почистить зубы, поесть, сходить в магазин, купить
//подарок маме на день рождения, придумайте какие нибудь задачи), Как только задача выполнилась, результат будет в виде
//строки (Например задача помыть посуду выполнена), на выполнение каждой задачи уходит от 10 до 10_000 миллисекунд
//подождите 50 миллисекунд и закончите работу, после распечатайте результаты в консоль P.S. используйте Callable и
// Futures