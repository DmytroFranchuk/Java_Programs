1 Напишите метод, который принимает список строк и возвращает список из тех,
    которые начинаются с цифры.
2 Напишите метод, который принимает мапу «Номер квартиры – Список возрастов жильцов».
    Метод возвращает мапу «Номер квартиры – Средний возраст жильцов».
3 Создайте 3 лямбда-выражения, которые выводят строку в консоль разными способами.
    Передайте все лямбда-выражения в метод в виде коллекции и выведите все строки в консоль.

4 Напишите методы для вычисления суммы, разности, произведения и частного двух чисел.
Создайте метод calculate, который будет возвращать результат вычисления, принимая в
качестве параметра экземпляр Callable.
Перед вычислением метод должен выводить сообщение «Выполняю вычисление»,
                             а после вычисления – «Вычисление выполнено».


5 Организуйте ввод пользователя: два числа и оператор.
Программа должна вывести результат в консоль и в файл.

s -> System.out.println(s);
x -> x*x;
s -> s == null || s.isBlank();
(age, name) -> System.out.printf("%s is %d years old", name, age);
(a, b) -> a + b;
(s1, s2) -> s1 != null && s2 != null && s1.length() > s2.length();

/\/\ /\/\ /\/\ /\/\ /\/\ /\/\ /\/\  /\/\  /\/\  /\/\  /\/\  /\/\  /\/\  /\/\

Создайте собственный функциональный интерфейс, внутри которого определите метод
execute, принимающий три аргумента типа T и возвращающий результат типа R.
В Main создайте метод, checkAndGet, принимающий экземпляр данного интерфейса и три
строки. Если хотя бы одна из переданных строк null, метод возвращает null. В противном
случае вызывает метод execute.
В методе main создайте три строки. Создайте несколько лямбда-выражений, которые
принимают три строки и возвращают:
- суммарную длину строк
- среднюю длину строк
- длину наименьшей строки
- длину строки, в которой больше всего цифр.
Вызовите метод checkAndGet для всех лямбда-выражений.
Что произойдёт, если добавить в функциональный интерфейс второй метод?
