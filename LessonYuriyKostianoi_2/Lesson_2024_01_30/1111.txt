<!-- Spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>


<!-- Spring MVC-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

<!-- Thymeleaf -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring6</artifactId>
            <version>3.1.2.RELEASE</version>
        </dependency>

        <!-- JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.16.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.16.0</version>
        </dependency>


<!-- Unit tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>

<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <spring.version>6.1.3</spring.version>
    </properties>


1 Заполните web.xml в соответствии с примером.
2 Рядом с web.xml создайте файл applicationContextMVC.xml, заполните его в    соответствии с примером.
3 Попробуйте запустить приложение.



1 Добавьте шаблонизатор Thymeleaf Spring6      https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring6
2 Создайте каталог views в каталоге WEB-INF.
3 В каталоге views создайте страницу show_truth.html. И заполните её как html-   страницу. Пример:



<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="ISO-8859-1">
        <title>First app</title>
    </head>
    <body>
        <h2>The truth is you're cool!</h2>
    </body>
</html>


1 Создайте класс FirstController и пометьте его аннотацией @Controller.
2 В классе создайте GET-запрос, ответом на который станет ранее созданный файл show_truth.html. С учётом предыдущих настроек, достаточно вернуть из метода имя нужного представления (без пути, без расширения файла).
3 Запустите приложение и перейдите по URL, чтобы получить страницу show_truth.html от сервера.
4 В приложение нужно добавить функциональность «говорить ложь». Доработайте приложение.

Создайте простое веб-приложение, которое принимает POST-запрос с текстом и добавляет этот текст в список. В ответ на POST запрос приложение отправляет представление с текстом «Ваше сообщение принято». По GET-запросу приложение возвращает список всех сообщений в виде JSON.

Lesson_2024_01_30
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Message Received</title>
</head>
<body>
    <h1 th:text="${message}"></h1>
</body>
</html>


Praktika_2024_02_02

Разработайте RESTful API для управления списком задач. API должно поддерживать операции создания, чтения (одной и всех задач), обновления и удаления задач (CRUD).

Разработайте RESTful API, которое принимает название города и возвращает информацию о погоде в этом городе. Для простоты возвращайте заранее определенные данные.










